"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
exports.default = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\nextend type Query {\n    fetchAdminOrders: [AdminOrderDoc!]\n    fetchAdminOrderByID(_id: String!): AdminOrderDoc\n}\n\nextend type Mutation {\n    postAdminOrder(authID: String!, AdminOrderInput: AdminOrderInput!): AdminOrderDoc\n    editAdminOrder(authID: String!, AdminOrderInput: AdminOrderInputEdit!): AdminOrderDoc\n    removeAdminOrder(authID: String!, _id: String!): AdminOrderDoc\n    updateOrderStatus(authID: String!, AdminOrderUpdate: AdminOrderUpdateInput): AdminOrderUpdate\n}\n\nextend type Subscription {\n    orderCreated: AdminOrderDoc\n    orderUpdated(ids: [String!]): AdminOrderUpdate\n}\n\ntype AdminOrderDoc {\n    _id: String\n    customer: String\n    items: [OrderItem]\n    orderInfo: AdminOrderInfo\n    status: String\n    createdAt: String\n    updatedAt: String\n    error: Error\n}\n\ntype AdminOrderUpdate {\n    _id: String\n    status: String\n    orderInfo: AdminOrderInfo\n}\n\ntype AdminOrderInfo {\n    address: AdminOrderAddress\n    totalDistance: Float\n    orderedTime: String\n    estimatedDeliveryTime: String\n    deliveryPerson: String\n}\n\ntype AdminOrderAddress {\n    from: String\n    to: String\n}\n\ninput AdminOrderInput {\n    customer: String!\n    amount: Int!\n    items: [ItemInput!]!\n}\n\ninput ItemInput {\n    selectedColor: String\n    selectedSize: String\n    amount: Int\n    _id: String\n}\n\ntype OrderItem {\n    selectedColor: String\n    selectedSize: String\n    amount: Int\n    _id: String\n}\n\ninput AdminOrderInputEdit {\n    _id: String!\n    customer: String\n    items: [ItemInput]\n    status: String\n}\n\ninput AdminOrderUpdateInput {\n    _id: String!\n    status: String!\n    detail: AdminOrderDetail\n}\n\ninput AdminOrderDetail {\n    address: AdminAddressInput!\n    totalDistance: Float!\n    deliveryPerson: String\n}\n\ninput AdminAddressInput {\n    from: String!\n    to: String!\n}\n\n"], ["\n\nextend type Query {\n    fetchAdminOrders: [AdminOrderDoc!]\n    fetchAdminOrderByID(_id: String!): AdminOrderDoc\n}\n\nextend type Mutation {\n    postAdminOrder(authID: String!, AdminOrderInput: AdminOrderInput!): AdminOrderDoc\n    editAdminOrder(authID: String!, AdminOrderInput: AdminOrderInputEdit!): AdminOrderDoc\n    removeAdminOrder(authID: String!, _id: String!): AdminOrderDoc\n    updateOrderStatus(authID: String!, AdminOrderUpdate: AdminOrderUpdateInput): AdminOrderUpdate\n}\n\nextend type Subscription {\n    orderCreated: AdminOrderDoc\n    orderUpdated(ids: [String!]): AdminOrderUpdate\n}\n\ntype AdminOrderDoc {\n    _id: String\n    customer: String\n    items: [OrderItem]\n    orderInfo: AdminOrderInfo\n    status: String\n    createdAt: String\n    updatedAt: String\n    error: Error\n}\n\ntype AdminOrderUpdate {\n    _id: String\n    status: String\n    orderInfo: AdminOrderInfo\n}\n\ntype AdminOrderInfo {\n    address: AdminOrderAddress\n    totalDistance: Float\n    orderedTime: String\n    estimatedDeliveryTime: String\n    deliveryPerson: String\n}\n\ntype AdminOrderAddress {\n    from: String\n    to: String\n}\n\ninput AdminOrderInput {\n    customer: String!\n    amount: Int!\n    items: [ItemInput!]!\n}\n\ninput ItemInput {\n    selectedColor: String\n    selectedSize: String\n    amount: Int\n    _id: String\n}\n\ntype OrderItem {\n    selectedColor: String\n    selectedSize: String\n    amount: Int\n    _id: String\n}\n\ninput AdminOrderInputEdit {\n    _id: String!\n    customer: String\n    items: [ItemInput]\n    status: String\n}\n\ninput AdminOrderUpdateInput {\n    _id: String!\n    status: String!\n    detail: AdminOrderDetail\n}\n\ninput AdminOrderDetail {\n    address: AdminAddressInput!\n    totalDistance: Float!\n    deliveryPerson: String\n}\n\ninput AdminAddressInput {\n    from: String!\n    to: String!\n}\n\n"])));
var templateObject_1;
